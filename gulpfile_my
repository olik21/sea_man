    var gulp      = require('gulp'), // Подключаем Gulp
        sass        = require('gulp-sass'), //Подключаем Sass пакет,
        browserSync = require('browser-sync'), // Подключаем Browser Sync
        concat      = require('gulp-concat'), // Подключаем gulp-concat (для конкатенации файлов)
        uglify      = require('gulp-uglifyjs'), // Подключаем gulp-uglifyjs (для сжатия JS)
        cssnano     = require('gulp-cssnano'), // Подключаем пакет для минификации CSS
        rename      = require('gulp-rename'), // Подключаем библиотеку для переименования файлов
        del         = require('del'); // Подключаем библиотеку для удаления файлов и папок
  

    gulp.task('sass', function(){ // Создаем таск Sass
        return gulp.src('app/scss/**/*.scss') // Берем источник
            .pipe(sass()) // Преобразуем Sass в CSS посредством gulp-sass
            .pipe(gulp.dest('app/css')) // Выгружаем результата в папку app/css
            .pipe(browserSync.reload({stream: true})) // Обновляем CSS на странице при изменении
    });

     gulp.task('browser-sync', function() { // Создаем таск browser-sync
        browserSync({ // Выполняем browserSync
            server: { // Определяем параметры сервера
                baseDir: 'app' // Директория для сервера - app
            },
            notify: false // Отключаем уведомления
        });
    });
    
      gulp.task('scripts', function() {
        return gulp.src([ // Берем все необходимые библиотеки
        
            'app/js/jquery-3.2.1.js' ,
            'app/js/common.js' ,
            'app/js/required_fields.js' ,
            'app/js/swiper.js' ,
            'app/js/slider.js' 
            ])
            .pipe(concat('script.min.js')) // Собираем их в кучу в новом файле libs.min.js
            .pipe(uglify()) // Сжимаем JS файл
            .pipe(gulp.dest('app/js')); // Выгружаем в папку app/js
    });
    
    gulp.task('css-libs', ['sass'], function() {
        return gulp.src('app/css/style.css') // Выбираем файл для минификации
            .pipe(cssnano()) // Сжимаем
            .pipe(rename({suffix: '.min'})) // Добавляем суффикс .min
            .pipe(gulp.dest('app/css')); // Выгружаем в папку app/css
    });
    

    gulp.task('watch', ['browser-sync', 'css-libs', 'scripts'], function() {
        gulp.watch('app/scss/**/*.scss', ['sass']); // Наблюдение за sass файлами
        // Наблюдение за другими типами файлов
		gulp.watch('app/*.html', browserSync.reload); // Наблюдение за HTML файлами в корне проекта
		gulp.watch('app/js/**/*.js', browserSync.reload);
    });
    
    gulp.task('clean', function() {
    return del.sync('dist'); // Удаляем папку dist перед сборкой
});




    
    gulp.task('build', [ 'sass', 'scripts'], function() {

        var buildCss = gulp.src([ // Переносим CSS стили в продакшен
            'app/css/style.css',
            'app/css/libs.min.css'
            ])
        .pipe(gulp.dest('dist/css'))

        var buildFonts = gulp.src('app/fonts/**/*') // Переносим шрифты в продакшен
        .pipe(gulp.dest('dist/fonts'))
        
        var buildImg = gulp.src('app/images/**/*') 
       .pipe(gulp.dest('dist/images'))

        var buildJs = gulp.src('app/js/**/*') // Переносим скрипты в продакшен
       .pipe(gulp.dest('dist/js'))
       
        
        var buildHtml = gulp.src('app/*.html') // Переносим HTML в продакшен
        .pipe(gulp.dest('dist'));

    });

    gulp.task('clear', function () {
        return cache.clearAll();
    })
